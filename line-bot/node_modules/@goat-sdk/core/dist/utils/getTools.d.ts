import * as zod from 'zod';
import { PluginBase } from '@goat-sdk/core/dist/classes/PluginBase.js';
import { ToolBase } from '@goat-sdk/core/dist/classes/ToolBase.js';
import { WalletClientBase } from '@goat-sdk/core/dist/classes/WalletClientBase.js';
import '@goat-sdk/core/dist/types/Chain.js';

type GetToolsParams<TWalletClient extends WalletClientBase> = {
    wallet: TWalletClient;
    plugins?: (PluginBase<TWalletClient> | PluginBase<WalletClientBase>)[];
};
declare function getTools<TWalletClient extends WalletClientBase>({ wallet, plugins, }: GetToolsParams<TWalletClient>): Promise<ToolBase<zod.ZodType<any, zod.ZodTypeDef, any>, any>[]>;

export { type GetToolsParams, getTools };
